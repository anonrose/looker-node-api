/**
 * Looker API 3.1 Reference
 * ### Authorization  The Looker API uses Looker **API3** credentials for authorization and access control. Looker admins can create API3 credentials on Looker's **Admin/Users** page. Pass API3 credentials to the **_/login** endpoint to obtain a temporary access_token. Include that access_token in the Authorization header of Looker API requests. For details, see [Looker API Authorization](https://looker.com/docs/r/api/authorization)  ### Client SDKs  The Looker API is a RESTful system that should be usable by any programming language capable of making HTTPS requests. Client SDKs for a variety of programming languages can be generated from the Looker API's Swagger JSON metadata to streamline use of the Looker API in your applications. A client SDK for Ruby is available as an example. For more information, see [Looker API Client SDKs](https://looker.com/docs/r/api/client_sdks)  ### Try It Out!  The 'api-docs' page served by the Looker instance includes 'Try It Out!' buttons for each API method. After logging in with API3 credentials, you can use the \"Try It Out!\" buttons to call the API directly from the documentation page to interactively explore API features and responses.  Note! With great power comes great responsibility: The \"Try It Out!\" button makes API calls to your live Looker instance. Be especially careful with destructive API operations such as `delete_user` or similar. There is no \"undo\" for API operations.  ### Versioning  Future releases of Looker will expand this API release-by-release to securely expose more and more of the core power of Looker to API client applications. API endpoints marked as \"beta\" may receive breaking changes without warning (but we will try to avoid doing that). Stable (non-beta) API endpoints should not receive breaking changes in future releases. For more information, see [Looker API Versioning](https://looker.com/docs/r/api/versioning)  This **API 3.1** is in active development. This is where support for new Looker features will appear as non-breaking additions - new functions, new optional parameters on existing functions, or new optional properties in existing types. Additive changes should not impact your existing application code that calls the Looker API. Your existing application code will not be aware of any new Looker API functionality until you choose to upgrade your app to use a newer Looker API client SDK release.  The following are a few examples of noteworthy items that have changed between API 3.0 and API 3.1. For more comprehensive coverage of API changes, please see the release notes for your Looker release.   ### Examples of new things added in API 3.1:  * Dashboard construction APIs * Themes and custom color collections APIs * Create and run SQL_runner queries * Create and run merged results queries * Create and modify dashboard filters * Create and modify password requirements   ### Deprecated in API 3.0  The following functions and properties have been deprecated in API 3.0.  They continue to exist and work in API 3.0 for the next several Looker releases but they have not been carried forward to API 3.1:  * Dashboard Prefetch functions * User access_filter functions * User API 1.0 credentials functions * Space.is_root and Space.is_user_root properties. Use Space.is_shared_root and Space.is_users_root instead.   ### Semantic changes in API 3.1:  * `all_looks` no longer includes soft-deleted looks, matching `all_dashboards` behavior. You can find soft-deleted looks using `search_looks` with the `deleted` param set to True. * `all_spaces` no longer includes duplicate items * `search_users` no longer accepts Y,y,1,0,N,n for Boolean params, only \"true\" and \"false\". * For greater client and network compatibility, `render_task_results` now returns HTTP status ***202 Accepted*** instead of HTTP status ***102 Processing*** * `all_running_queries` and `kill_query` functions have moved into the `Query` function group.   If you have application code which relies on the old behavior of the APIs above, you may continue using the API 3.0 functions in this Looker release. We strongly suggest you update your code to use API 3.1 analogs as soon as possible.
 *
 * OpenAPI spec version: 3.1.0
 * Contact: support@looker.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessToken', 'model/ApiSession', 'model/ApiVersion', 'model/ApiVersionElement', 'model/BackupConfiguration', 'model/ColorCollection', 'model/ColorStop', 'model/ContentFavorite', 'model/ContentMeta', 'model/ContentMetaGroupUser', 'model/ContentValidation', 'model/ContentValidationDashboard', 'model/ContentValidationDashboardElement', 'model/ContentValidationDashboardFilter', 'model/ContentValidationLook', 'model/ContentValidationSpace', 'model/ContentValidatorError', 'model/ContentView', 'model/ContinuousPalette', 'model/CreateDashboardFilter', 'model/CreateDashboardRenderTask', 'model/CreateQueryTask', 'model/CredentialsApi3', 'model/CredentialsEmail', 'model/CredentialsEmbed', 'model/CredentialsGoogle', 'model/CredentialsLDAP', 'model/CredentialsLookerOpenid', 'model/CredentialsOIDC', 'model/CredentialsSaml', 'model/CredentialsTotp', 'model/DBConnection', 'model/DBConnectionBase', 'model/DBConnectionOverride', 'model/DBConnectionTestResult', 'model/Dashboard', 'model/DashboardBase', 'model/DashboardElement', 'model/DashboardFilter', 'model/DashboardLayout', 'model/DashboardLayoutComponent', 'model/DataActionForm', 'model/DataActionFormField', 'model/DataActionFormSelectOption', 'model/DataActionRequest', 'model/DataActionResponse', 'model/DataActionUserState', 'model/Datagroup', 'model/Dialect', 'model/DialectInfo', 'model/DialectInfoOptions', 'model/DiscretePalette', 'model/Error', 'model/Folder', 'model/GitBranch', 'model/GitConnectionTest', 'model/GitConnectionTestResult', 'model/GitStatus', 'model/Group', 'model/GroupIdForGroupInclusion', 'model/GroupIdForGroupUserInclusion', 'model/Homepage', 'model/HomepageItem', 'model/HomepageSection', 'model/ImportedProject', 'model/Integration', 'model/IntegrationHub', 'model/IntegrationParam', 'model/IntegrationRequiredField', 'model/IntegrationTestResult', 'model/LDAPConfig', 'model/LDAPConfigTestIssue', 'model/LDAPConfigTestResult', 'model/LDAPGroupRead', 'model/LDAPGroupWrite', 'model/LDAPUser', 'model/LDAPUserAttributeRead', 'model/LDAPUserAttributeWrite', 'model/LegacyFeature', 'model/Locale', 'model/LocalizationSettings', 'model/Look', 'model/LookBasic', 'model/LookModel', 'model/LookWithDashboards', 'model/LookWithQuery', 'model/LookmlModel', 'model/LookmlModelExplore', 'model/LookmlModelExploreAccessFilter', 'model/LookmlModelExploreAlias', 'model/LookmlModelExploreAlwaysFilter', 'model/LookmlModelExploreConditionallyFilter', 'model/LookmlModelExploreError', 'model/LookmlModelExploreField', 'model/LookmlModelExploreFieldEnumeration', 'model/LookmlModelExploreFieldMapLayer', 'model/LookmlModelExploreFieldSqlCase', 'model/LookmlModelExploreFieldTimeInterval', 'model/LookmlModelExploreFieldset', 'model/LookmlModelExploreJoins', 'model/LookmlModelExploreSet', 'model/LookmlModelExploreSupportedMeasureType', 'model/LookmlModelNavExplore', 'model/Manifest', 'model/MergeFields', 'model/MergeQuery', 'model/MergeQuerySourceQuery', 'model/ModelSet', 'model/ModelsNotValidated', 'model/OIDCConfig', 'model/OIDCGroupRead', 'model/OIDCGroupWrite', 'model/OIDCUserAttributeRead', 'model/OIDCUserAttributeWrite', 'model/PasswordConfig', 'model/Permission', 'model/PermissionSet', 'model/Project', 'model/ProjectError', 'model/ProjectFile', 'model/ProjectValidation', 'model/ProjectValidationCache', 'model/ProjectWorkspace', 'model/Query', 'model/QueryTask', 'model/RenderTask', 'model/RepositoryCredential', 'model/ResultMakerFilterables', 'model/ResultMakerFilterablesListen', 'model/ResultMakerWithIdVisConfigAndDynamicFields', 'model/Role', 'model/RunningQueries', 'model/SamlConfig', 'model/SamlGroupRead', 'model/SamlGroupWrite', 'model/SamlMetadataParseResult', 'model/SamlUserAttributeRead', 'model/SamlUserAttributeWrite', 'model/ScheduledPlan', 'model/ScheduledPlanDestination', 'model/Session', 'model/SessionConfig', 'model/Snippet', 'model/Space', 'model/SpaceBase', 'model/SqlQuery', 'model/SqlQueryCreate', 'model/Theme', 'model/ThemeSettings', 'model/Timezone', 'model/User', 'model/UserAttribute', 'model/UserAttributeGroupValue', 'model/UserAttributeWithValue', 'model/UserIdOnly', 'model/UserPublic', 'model/ValidationError', 'model/ValidationErrorDetail', 'model/WhitelabelConfiguration', 'model/Workspace', 'api/ApiAuthApi', 'api/AuthApi', 'api/ColorCollectionApi', 'api/ConfigApi', 'api/ConnectionApi', 'api/ContentApi', 'api/DashboardApi', 'api/DataActionApi', 'api/DatagroupApi', 'api/FolderApi', 'api/GroupApi', 'api/HomepageApi', 'api/IntegrationApi', 'api/LookApi', 'api/LookmlModelApi', 'api/ProjectApi', 'api/QueryApi', 'api/RenderTaskApi', 'api/RoleApi', 'api/ScheduledPlanApi', 'api/SessionApi', 'api/SpaceApi', 'api/ThemeApi', 'api/UserApi', 'api/UserAttributeApi', 'api/WorkspaceApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccessToken'), require('./model/ApiSession'), require('./model/ApiVersion'), require('./model/ApiVersionElement'), require('./model/BackupConfiguration'), require('./model/ColorCollection'), require('./model/ColorStop'), require('./model/ContentFavorite'), require('./model/ContentMeta'), require('./model/ContentMetaGroupUser'), require('./model/ContentValidation'), require('./model/ContentValidationDashboard'), require('./model/ContentValidationDashboardElement'), require('./model/ContentValidationDashboardFilter'), require('./model/ContentValidationLook'), require('./model/ContentValidationSpace'), require('./model/ContentValidatorError'), require('./model/ContentView'), require('./model/ContinuousPalette'), require('./model/CreateDashboardFilter'), require('./model/CreateDashboardRenderTask'), require('./model/CreateQueryTask'), require('./model/CredentialsApi3'), require('./model/CredentialsEmail'), require('./model/CredentialsEmbed'), require('./model/CredentialsGoogle'), require('./model/CredentialsLDAP'), require('./model/CredentialsLookerOpenid'), require('./model/CredentialsOIDC'), require('./model/CredentialsSaml'), require('./model/CredentialsTotp'), require('./model/DBConnection'), require('./model/DBConnectionBase'), require('./model/DBConnectionOverride'), require('./model/DBConnectionTestResult'), require('./model/Dashboard'), require('./model/DashboardBase'), require('./model/DashboardElement'), require('./model/DashboardFilter'), require('./model/DashboardLayout'), require('./model/DashboardLayoutComponent'), require('./model/DataActionForm'), require('./model/DataActionFormField'), require('./model/DataActionFormSelectOption'), require('./model/DataActionRequest'), require('./model/DataActionResponse'), require('./model/DataActionUserState'), require('./model/Datagroup'), require('./model/Dialect'), require('./model/DialectInfo'), require('./model/DialectInfoOptions'), require('./model/DiscretePalette'), require('./model/Error'), require('./model/Folder'), require('./model/GitBranch'), require('./model/GitConnectionTest'), require('./model/GitConnectionTestResult'), require('./model/GitStatus'), require('./model/Group'), require('./model/GroupIdForGroupInclusion'), require('./model/GroupIdForGroupUserInclusion'), require('./model/Homepage'), require('./model/HomepageItem'), require('./model/HomepageSection'), require('./model/ImportedProject'), require('./model/Integration'), require('./model/IntegrationHub'), require('./model/IntegrationParam'), require('./model/IntegrationRequiredField'), require('./model/IntegrationTestResult'), require('./model/LDAPConfig'), require('./model/LDAPConfigTestIssue'), require('./model/LDAPConfigTestResult'), require('./model/LDAPGroupRead'), require('./model/LDAPGroupWrite'), require('./model/LDAPUser'), require('./model/LDAPUserAttributeRead'), require('./model/LDAPUserAttributeWrite'), require('./model/LegacyFeature'), require('./model/Locale'), require('./model/LocalizationSettings'), require('./model/Look'), require('./model/LookBasic'), require('./model/LookModel'), require('./model/LookWithDashboards'), require('./model/LookWithQuery'), require('./model/LookmlModel'), require('./model/LookmlModelExplore'), require('./model/LookmlModelExploreAccessFilter'), require('./model/LookmlModelExploreAlias'), require('./model/LookmlModelExploreAlwaysFilter'), require('./model/LookmlModelExploreConditionallyFilter'), require('./model/LookmlModelExploreError'), require('./model/LookmlModelExploreField'), require('./model/LookmlModelExploreFieldEnumeration'), require('./model/LookmlModelExploreFieldMapLayer'), require('./model/LookmlModelExploreFieldSqlCase'), require('./model/LookmlModelExploreFieldTimeInterval'), require('./model/LookmlModelExploreFieldset'), require('./model/LookmlModelExploreJoins'), require('./model/LookmlModelExploreSet'), require('./model/LookmlModelExploreSupportedMeasureType'), require('./model/LookmlModelNavExplore'), require('./model/Manifest'), require('./model/MergeFields'), require('./model/MergeQuery'), require('./model/MergeQuerySourceQuery'), require('./model/ModelSet'), require('./model/ModelsNotValidated'), require('./model/OIDCConfig'), require('./model/OIDCGroupRead'), require('./model/OIDCGroupWrite'), require('./model/OIDCUserAttributeRead'), require('./model/OIDCUserAttributeWrite'), require('./model/PasswordConfig'), require('./model/Permission'), require('./model/PermissionSet'), require('./model/Project'), require('./model/ProjectError'), require('./model/ProjectFile'), require('./model/ProjectValidation'), require('./model/ProjectValidationCache'), require('./model/ProjectWorkspace'), require('./model/Query'), require('./model/QueryTask'), require('./model/RenderTask'), require('./model/RepositoryCredential'), require('./model/ResultMakerFilterables'), require('./model/ResultMakerFilterablesListen'), require('./model/ResultMakerWithIdVisConfigAndDynamicFields'), require('./model/Role'), require('./model/RunningQueries'), require('./model/SamlConfig'), require('./model/SamlGroupRead'), require('./model/SamlGroupWrite'), require('./model/SamlMetadataParseResult'), require('./model/SamlUserAttributeRead'), require('./model/SamlUserAttributeWrite'), require('./model/ScheduledPlan'), require('./model/ScheduledPlanDestination'), require('./model/Session'), require('./model/SessionConfig'), require('./model/Snippet'), require('./model/Space'), require('./model/SpaceBase'), require('./model/SqlQuery'), require('./model/SqlQueryCreate'), require('./model/Theme'), require('./model/ThemeSettings'), require('./model/Timezone'), require('./model/User'), require('./model/UserAttribute'), require('./model/UserAttributeGroupValue'), require('./model/UserAttributeWithValue'), require('./model/UserIdOnly'), require('./model/UserPublic'), require('./model/ValidationError'), require('./model/ValidationErrorDetail'), require('./model/WhitelabelConfiguration'), require('./model/Workspace'), require('./api/ApiAuthApi'), require('./api/AuthApi'), require('./api/ColorCollectionApi'), require('./api/ConfigApi'), require('./api/ConnectionApi'), require('./api/ContentApi'), require('./api/DashboardApi'), require('./api/DataActionApi'), require('./api/DatagroupApi'), require('./api/FolderApi'), require('./api/GroupApi'), require('./api/HomepageApi'), require('./api/IntegrationApi'), require('./api/LookApi'), require('./api/LookmlModelApi'), require('./api/ProjectApi'), require('./api/QueryApi'), require('./api/RenderTaskApi'), require('./api/RoleApi'), require('./api/ScheduledPlanApi'), require('./api/SessionApi'), require('./api/SpaceApi'), require('./api/ThemeApi'), require('./api/UserApi'), require('./api/UserAttributeApi'), require('./api/WorkspaceApi'));
  }
}(function(ApiClient, AccessToken, ApiSession, ApiVersion, ApiVersionElement, BackupConfiguration, ColorCollection, ColorStop, ContentFavorite, ContentMeta, ContentMetaGroupUser, ContentValidation, ContentValidationDashboard, ContentValidationDashboardElement, ContentValidationDashboardFilter, ContentValidationLook, ContentValidationSpace, ContentValidatorError, ContentView, ContinuousPalette, CreateDashboardFilter, CreateDashboardRenderTask, CreateQueryTask, CredentialsApi3, CredentialsEmail, CredentialsEmbed, CredentialsGoogle, CredentialsLDAP, CredentialsLookerOpenid, CredentialsOIDC, CredentialsSaml, CredentialsTotp, DBConnection, DBConnectionBase, DBConnectionOverride, DBConnectionTestResult, Dashboard, DashboardBase, DashboardElement, DashboardFilter, DashboardLayout, DashboardLayoutComponent, DataActionForm, DataActionFormField, DataActionFormSelectOption, DataActionRequest, DataActionResponse, DataActionUserState, Datagroup, Dialect, DialectInfo, DialectInfoOptions, DiscretePalette, Error, Folder, GitBranch, GitConnectionTest, GitConnectionTestResult, GitStatus, Group, GroupIdForGroupInclusion, GroupIdForGroupUserInclusion, Homepage, HomepageItem, HomepageSection, ImportedProject, Integration, IntegrationHub, IntegrationParam, IntegrationRequiredField, IntegrationTestResult, LDAPConfig, LDAPConfigTestIssue, LDAPConfigTestResult, LDAPGroupRead, LDAPGroupWrite, LDAPUser, LDAPUserAttributeRead, LDAPUserAttributeWrite, LegacyFeature, Locale, LocalizationSettings, Look, LookBasic, LookModel, LookWithDashboards, LookWithQuery, LookmlModel, LookmlModelExplore, LookmlModelExploreAccessFilter, LookmlModelExploreAlias, LookmlModelExploreAlwaysFilter, LookmlModelExploreConditionallyFilter, LookmlModelExploreError, LookmlModelExploreField, LookmlModelExploreFieldEnumeration, LookmlModelExploreFieldMapLayer, LookmlModelExploreFieldSqlCase, LookmlModelExploreFieldTimeInterval, LookmlModelExploreFieldset, LookmlModelExploreJoins, LookmlModelExploreSet, LookmlModelExploreSupportedMeasureType, LookmlModelNavExplore, Manifest, MergeFields, MergeQuery, MergeQuerySourceQuery, ModelSet, ModelsNotValidated, OIDCConfig, OIDCGroupRead, OIDCGroupWrite, OIDCUserAttributeRead, OIDCUserAttributeWrite, PasswordConfig, Permission, PermissionSet, Project, ProjectError, ProjectFile, ProjectValidation, ProjectValidationCache, ProjectWorkspace, Query, QueryTask, RenderTask, RepositoryCredential, ResultMakerFilterables, ResultMakerFilterablesListen, ResultMakerWithIdVisConfigAndDynamicFields, Role, RunningQueries, SamlConfig, SamlGroupRead, SamlGroupWrite, SamlMetadataParseResult, SamlUserAttributeRead, SamlUserAttributeWrite, ScheduledPlan, ScheduledPlanDestination, Session, SessionConfig, Snippet, Space, SpaceBase, SqlQuery, SqlQueryCreate, Theme, ThemeSettings, Timezone, User, UserAttribute, UserAttributeGroupValue, UserAttributeWithValue, UserIdOnly, UserPublic, ValidationError, ValidationErrorDetail, WhitelabelConfiguration, Workspace, ApiAuthApi, AuthApi, ColorCollectionApi, ConfigApi, ConnectionApi, ContentApi, DashboardApi, DataActionApi, DatagroupApi, FolderApi, GroupApi, HomepageApi, IntegrationApi, LookApi, LookmlModelApi, ProjectApi, QueryApi, RenderTaskApi, RoleApi, ScheduledPlanApi, SessionApi, SpaceApi, ThemeApi, UserApi, UserAttributeApi, WorkspaceApi) {
  'use strict';

  /**
   * _AuthorizationThe_Looker_API_uses_Looker_API3_credentials_for_authorization_and_access_control__Looker_admins_cancreate_API3_credentials_on_Lookers_AdminUsers_page__Pass_API3_credentials_to_the_login_endpoint_toobtain_a_temporary_access_token__Include_that_access_token_in_the_Authorization_header_of_Looker_API_requests_For_details_see__Looker_API_Authorization_httpslooker_comdocsrapiauthorization_Client_SDKsThe_Looker_API_is_a_RESTful_system_that_should_be_usable_by_any_programming_language_capable_of_makingHTTPS_requests__Client_SDKs_for_a_variety_of_programming_languages_can_be_generated_from_the_Looker_APIs_SwaggerJSON_metadata_to_streamline_use_of_the_Looker_API_in_your_applications__A_client_SDK_for_Ruby_is_availableas_an_example__For_more_information_see__Looker_API_Client_SDKs_httpslooker_comdocsrapiclient_sdks_Try_It_OutThe_api_docs_page_served_by_the_Looker_instance_includes_Try_It_Out_buttons_for_each_API_method__After_loggingin_with_API3_credentials_you_can_use_the_Try_It_Out_buttons_to_call_the_API_directly_from_the_documentationpage_to_interactively_explore_API_features_and_responses_Note_With_great_power_comes_great_responsibility_The_Try_It_Out_button_makes_API_calls_to_your_live_Lookerinstance__Be_especially_careful_with_destructive_API_operations_such_as_delete_user_or_similar_There_is_no_undo_for_API_operations__VersioningFuture_releases_of_Looker_will_expand_this_API_release_by_release_to_securely_expose_more_and_more_of_the_corepower_of_Looker_to_API_client_applications__API_endpoints_marked_as_beta_may_receive_breaking_changes_withoutwarning__but_we_will_try_to_avoid_doing_that__Stable__non_beta_API_endpoints_should_not_receive_breakingchanges_in_future_releases_For_more_information_see__Looker_API_Versioning_httpslooker_comdocsrapiversioningThis_API_3_1_is_in_active_development__This_is_where_support_for_new_Looker_features_willappear_as_non_breaking_additions___new_functions_new_optional_parameters_on_existing_functions_or_new_optionalproperties_in_existing_types__Additive_changes_should_not_impact_your_existing_application_code_that_calls_theLooker_API__Your_existing_application_code_will_not_be_aware_of_any_new_Looker_API_functionalityuntil_you_choose_to_upgrade_your_app_to_use_a_newer_Looker_API_client_SDK_release_The_following_are_a_few_examples_of_noteworthy_items_that_have_changed_between_API_3_0_and_API_3_1_For_more_comprehensive_coverage_of_API_changes_please_see_the_release_notes_for_your_Looker_release__Examples_of_new_things_added_in_API_3_1_Dashboard_construction_APIs_Themes_and_custom_color_collections_APIs_Create_and_run_SQL_runner_queries_Create_and_run_merged_results_queries_Create_and_modify_dashboard_filters_Create_and_modify_password_requirements_Deprecated_in_API_3_0The_following_functions_and_properties_have_been_deprecated_in_API_3_0___They_continue_to_exist_and_work_in_API_3_0for_the_next_several_Looker_releases_but_they_have_not_been_carried_forward_to_API_3_1_Dashboard_Prefetch_functions_User_access_filter_functions_User_API_1_0_credentials_functions_Space_is_root_and_Space_is_user_root_properties__Use_Space_is_shared_root_and_Space_is_users_root_instead__Semantic_changes_in_API_3_1_all_looks_no_longer_includes_soft_deleted_looks_matching_all_dashboards_behavior_You_can_find_soft_deleted_looks_using_search_looks_with_the_deleted_param_set_to_True__all_spaces_no_longer_includes_duplicate_items_search_users_no_longer_accepts_Yy10Nn_for_Boolean_params_only_true_and_false__For_greater_client_and_network_compatibility_render_task_results_now_returnsHTTP_status_202_Accepted_instead_of_HTTP_status_102_Processing_all_running_queries_and_kill_query_functions_have_moved_into_the_Query_function_group_If_you_have_application_code_which_relies_on_the_old_behavior_of_the_APIs_above_you_maycontinue_using_the_API_3_0_functions_in_this_Looker_release__We_strongly_suggest_youupdate_your_code_to_use_API_3_1_analogs_as_soon_as_possible_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var LookerApi31Reference = require('index'); // See note below*.
   * var xxxSvc = new LookerApi31Reference.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new LookerApi31Reference.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new LookerApi31Reference.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new LookerApi31Reference.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 3.1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccessToken model constructor.
     * @property {module:model/AccessToken}
     */
    AccessToken: AccessToken,
    /**
     * The ApiSession model constructor.
     * @property {module:model/ApiSession}
     */
    ApiSession: ApiSession,
    /**
     * The ApiVersion model constructor.
     * @property {module:model/ApiVersion}
     */
    ApiVersion: ApiVersion,
    /**
     * The ApiVersionElement model constructor.
     * @property {module:model/ApiVersionElement}
     */
    ApiVersionElement: ApiVersionElement,
    /**
     * The BackupConfiguration model constructor.
     * @property {module:model/BackupConfiguration}
     */
    BackupConfiguration: BackupConfiguration,
    /**
     * The ColorCollection model constructor.
     * @property {module:model/ColorCollection}
     */
    ColorCollection: ColorCollection,
    /**
     * The ColorStop model constructor.
     * @property {module:model/ColorStop}
     */
    ColorStop: ColorStop,
    /**
     * The ContentFavorite model constructor.
     * @property {module:model/ContentFavorite}
     */
    ContentFavorite: ContentFavorite,
    /**
     * The ContentMeta model constructor.
     * @property {module:model/ContentMeta}
     */
    ContentMeta: ContentMeta,
    /**
     * The ContentMetaGroupUser model constructor.
     * @property {module:model/ContentMetaGroupUser}
     */
    ContentMetaGroupUser: ContentMetaGroupUser,
    /**
     * The ContentValidation model constructor.
     * @property {module:model/ContentValidation}
     */
    ContentValidation: ContentValidation,
    /**
     * The ContentValidationDashboard model constructor.
     * @property {module:model/ContentValidationDashboard}
     */
    ContentValidationDashboard: ContentValidationDashboard,
    /**
     * The ContentValidationDashboardElement model constructor.
     * @property {module:model/ContentValidationDashboardElement}
     */
    ContentValidationDashboardElement: ContentValidationDashboardElement,
    /**
     * The ContentValidationDashboardFilter model constructor.
     * @property {module:model/ContentValidationDashboardFilter}
     */
    ContentValidationDashboardFilter: ContentValidationDashboardFilter,
    /**
     * The ContentValidationLook model constructor.
     * @property {module:model/ContentValidationLook}
     */
    ContentValidationLook: ContentValidationLook,
    /**
     * The ContentValidationSpace model constructor.
     * @property {module:model/ContentValidationSpace}
     */
    ContentValidationSpace: ContentValidationSpace,
    /**
     * The ContentValidatorError model constructor.
     * @property {module:model/ContentValidatorError}
     */
    ContentValidatorError: ContentValidatorError,
    /**
     * The ContentView model constructor.
     * @property {module:model/ContentView}
     */
    ContentView: ContentView,
    /**
     * The ContinuousPalette model constructor.
     * @property {module:model/ContinuousPalette}
     */
    ContinuousPalette: ContinuousPalette,
    /**
     * The CreateDashboardFilter model constructor.
     * @property {module:model/CreateDashboardFilter}
     */
    CreateDashboardFilter: CreateDashboardFilter,
    /**
     * The CreateDashboardRenderTask model constructor.
     * @property {module:model/CreateDashboardRenderTask}
     */
    CreateDashboardRenderTask: CreateDashboardRenderTask,
    /**
     * The CreateQueryTask model constructor.
     * @property {module:model/CreateQueryTask}
     */
    CreateQueryTask: CreateQueryTask,
    /**
     * The CredentialsApi3 model constructor.
     * @property {module:model/CredentialsApi3}
     */
    CredentialsApi3: CredentialsApi3,
    /**
     * The CredentialsEmail model constructor.
     * @property {module:model/CredentialsEmail}
     */
    CredentialsEmail: CredentialsEmail,
    /**
     * The CredentialsEmbed model constructor.
     * @property {module:model/CredentialsEmbed}
     */
    CredentialsEmbed: CredentialsEmbed,
    /**
     * The CredentialsGoogle model constructor.
     * @property {module:model/CredentialsGoogle}
     */
    CredentialsGoogle: CredentialsGoogle,
    /**
     * The CredentialsLDAP model constructor.
     * @property {module:model/CredentialsLDAP}
     */
    CredentialsLDAP: CredentialsLDAP,
    /**
     * The CredentialsLookerOpenid model constructor.
     * @property {module:model/CredentialsLookerOpenid}
     */
    CredentialsLookerOpenid: CredentialsLookerOpenid,
    /**
     * The CredentialsOIDC model constructor.
     * @property {module:model/CredentialsOIDC}
     */
    CredentialsOIDC: CredentialsOIDC,
    /**
     * The CredentialsSaml model constructor.
     * @property {module:model/CredentialsSaml}
     */
    CredentialsSaml: CredentialsSaml,
    /**
     * The CredentialsTotp model constructor.
     * @property {module:model/CredentialsTotp}
     */
    CredentialsTotp: CredentialsTotp,
    /**
     * The DBConnection model constructor.
     * @property {module:model/DBConnection}
     */
    DBConnection: DBConnection,
    /**
     * The DBConnectionBase model constructor.
     * @property {module:model/DBConnectionBase}
     */
    DBConnectionBase: DBConnectionBase,
    /**
     * The DBConnectionOverride model constructor.
     * @property {module:model/DBConnectionOverride}
     */
    DBConnectionOverride: DBConnectionOverride,
    /**
     * The DBConnectionTestResult model constructor.
     * @property {module:model/DBConnectionTestResult}
     */
    DBConnectionTestResult: DBConnectionTestResult,
    /**
     * The Dashboard model constructor.
     * @property {module:model/Dashboard}
     */
    Dashboard: Dashboard,
    /**
     * The DashboardBase model constructor.
     * @property {module:model/DashboardBase}
     */
    DashboardBase: DashboardBase,
    /**
     * The DashboardElement model constructor.
     * @property {module:model/DashboardElement}
     */
    DashboardElement: DashboardElement,
    /**
     * The DashboardFilter model constructor.
     * @property {module:model/DashboardFilter}
     */
    DashboardFilter: DashboardFilter,
    /**
     * The DashboardLayout model constructor.
     * @property {module:model/DashboardLayout}
     */
    DashboardLayout: DashboardLayout,
    /**
     * The DashboardLayoutComponent model constructor.
     * @property {module:model/DashboardLayoutComponent}
     */
    DashboardLayoutComponent: DashboardLayoutComponent,
    /**
     * The DataActionForm model constructor.
     * @property {module:model/DataActionForm}
     */
    DataActionForm: DataActionForm,
    /**
     * The DataActionFormField model constructor.
     * @property {module:model/DataActionFormField}
     */
    DataActionFormField: DataActionFormField,
    /**
     * The DataActionFormSelectOption model constructor.
     * @property {module:model/DataActionFormSelectOption}
     */
    DataActionFormSelectOption: DataActionFormSelectOption,
    /**
     * The DataActionRequest model constructor.
     * @property {module:model/DataActionRequest}
     */
    DataActionRequest: DataActionRequest,
    /**
     * The DataActionResponse model constructor.
     * @property {module:model/DataActionResponse}
     */
    DataActionResponse: DataActionResponse,
    /**
     * The DataActionUserState model constructor.
     * @property {module:model/DataActionUserState}
     */
    DataActionUserState: DataActionUserState,
    /**
     * The Datagroup model constructor.
     * @property {module:model/Datagroup}
     */
    Datagroup: Datagroup,
    /**
     * The Dialect model constructor.
     * @property {module:model/Dialect}
     */
    Dialect: Dialect,
    /**
     * The DialectInfo model constructor.
     * @property {module:model/DialectInfo}
     */
    DialectInfo: DialectInfo,
    /**
     * The DialectInfoOptions model constructor.
     * @property {module:model/DialectInfoOptions}
     */
    DialectInfoOptions: DialectInfoOptions,
    /**
     * The DiscretePalette model constructor.
     * @property {module:model/DiscretePalette}
     */
    DiscretePalette: DiscretePalette,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The Folder model constructor.
     * @property {module:model/Folder}
     */
    Folder: Folder,
    /**
     * The GitBranch model constructor.
     * @property {module:model/GitBranch}
     */
    GitBranch: GitBranch,
    /**
     * The GitConnectionTest model constructor.
     * @property {module:model/GitConnectionTest}
     */
    GitConnectionTest: GitConnectionTest,
    /**
     * The GitConnectionTestResult model constructor.
     * @property {module:model/GitConnectionTestResult}
     */
    GitConnectionTestResult: GitConnectionTestResult,
    /**
     * The GitStatus model constructor.
     * @property {module:model/GitStatus}
     */
    GitStatus: GitStatus,
    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group: Group,
    /**
     * The GroupIdForGroupInclusion model constructor.
     * @property {module:model/GroupIdForGroupInclusion}
     */
    GroupIdForGroupInclusion: GroupIdForGroupInclusion,
    /**
     * The GroupIdForGroupUserInclusion model constructor.
     * @property {module:model/GroupIdForGroupUserInclusion}
     */
    GroupIdForGroupUserInclusion: GroupIdForGroupUserInclusion,
    /**
     * The Homepage model constructor.
     * @property {module:model/Homepage}
     */
    Homepage: Homepage,
    /**
     * The HomepageItem model constructor.
     * @property {module:model/HomepageItem}
     */
    HomepageItem: HomepageItem,
    /**
     * The HomepageSection model constructor.
     * @property {module:model/HomepageSection}
     */
    HomepageSection: HomepageSection,
    /**
     * The ImportedProject model constructor.
     * @property {module:model/ImportedProject}
     */
    ImportedProject: ImportedProject,
    /**
     * The Integration model constructor.
     * @property {module:model/Integration}
     */
    Integration: Integration,
    /**
     * The IntegrationHub model constructor.
     * @property {module:model/IntegrationHub}
     */
    IntegrationHub: IntegrationHub,
    /**
     * The IntegrationParam model constructor.
     * @property {module:model/IntegrationParam}
     */
    IntegrationParam: IntegrationParam,
    /**
     * The IntegrationRequiredField model constructor.
     * @property {module:model/IntegrationRequiredField}
     */
    IntegrationRequiredField: IntegrationRequiredField,
    /**
     * The IntegrationTestResult model constructor.
     * @property {module:model/IntegrationTestResult}
     */
    IntegrationTestResult: IntegrationTestResult,
    /**
     * The LDAPConfig model constructor.
     * @property {module:model/LDAPConfig}
     */
    LDAPConfig: LDAPConfig,
    /**
     * The LDAPConfigTestIssue model constructor.
     * @property {module:model/LDAPConfigTestIssue}
     */
    LDAPConfigTestIssue: LDAPConfigTestIssue,
    /**
     * The LDAPConfigTestResult model constructor.
     * @property {module:model/LDAPConfigTestResult}
     */
    LDAPConfigTestResult: LDAPConfigTestResult,
    /**
     * The LDAPGroupRead model constructor.
     * @property {module:model/LDAPGroupRead}
     */
    LDAPGroupRead: LDAPGroupRead,
    /**
     * The LDAPGroupWrite model constructor.
     * @property {module:model/LDAPGroupWrite}
     */
    LDAPGroupWrite: LDAPGroupWrite,
    /**
     * The LDAPUser model constructor.
     * @property {module:model/LDAPUser}
     */
    LDAPUser: LDAPUser,
    /**
     * The LDAPUserAttributeRead model constructor.
     * @property {module:model/LDAPUserAttributeRead}
     */
    LDAPUserAttributeRead: LDAPUserAttributeRead,
    /**
     * The LDAPUserAttributeWrite model constructor.
     * @property {module:model/LDAPUserAttributeWrite}
     */
    LDAPUserAttributeWrite: LDAPUserAttributeWrite,
    /**
     * The LegacyFeature model constructor.
     * @property {module:model/LegacyFeature}
     */
    LegacyFeature: LegacyFeature,
    /**
     * The Locale model constructor.
     * @property {module:model/Locale}
     */
    Locale: Locale,
    /**
     * The LocalizationSettings model constructor.
     * @property {module:model/LocalizationSettings}
     */
    LocalizationSettings: LocalizationSettings,
    /**
     * The Look model constructor.
     * @property {module:model/Look}
     */
    Look: Look,
    /**
     * The LookBasic model constructor.
     * @property {module:model/LookBasic}
     */
    LookBasic: LookBasic,
    /**
     * The LookModel model constructor.
     * @property {module:model/LookModel}
     */
    LookModel: LookModel,
    /**
     * The LookWithDashboards model constructor.
     * @property {module:model/LookWithDashboards}
     */
    LookWithDashboards: LookWithDashboards,
    /**
     * The LookWithQuery model constructor.
     * @property {module:model/LookWithQuery}
     */
    LookWithQuery: LookWithQuery,
    /**
     * The LookmlModel model constructor.
     * @property {module:model/LookmlModel}
     */
    LookmlModel: LookmlModel,
    /**
     * The LookmlModelExplore model constructor.
     * @property {module:model/LookmlModelExplore}
     */
    LookmlModelExplore: LookmlModelExplore,
    /**
     * The LookmlModelExploreAccessFilter model constructor.
     * @property {module:model/LookmlModelExploreAccessFilter}
     */
    LookmlModelExploreAccessFilter: LookmlModelExploreAccessFilter,
    /**
     * The LookmlModelExploreAlias model constructor.
     * @property {module:model/LookmlModelExploreAlias}
     */
    LookmlModelExploreAlias: LookmlModelExploreAlias,
    /**
     * The LookmlModelExploreAlwaysFilter model constructor.
     * @property {module:model/LookmlModelExploreAlwaysFilter}
     */
    LookmlModelExploreAlwaysFilter: LookmlModelExploreAlwaysFilter,
    /**
     * The LookmlModelExploreConditionallyFilter model constructor.
     * @property {module:model/LookmlModelExploreConditionallyFilter}
     */
    LookmlModelExploreConditionallyFilter: LookmlModelExploreConditionallyFilter,
    /**
     * The LookmlModelExploreError model constructor.
     * @property {module:model/LookmlModelExploreError}
     */
    LookmlModelExploreError: LookmlModelExploreError,
    /**
     * The LookmlModelExploreField model constructor.
     * @property {module:model/LookmlModelExploreField}
     */
    LookmlModelExploreField: LookmlModelExploreField,
    /**
     * The LookmlModelExploreFieldEnumeration model constructor.
     * @property {module:model/LookmlModelExploreFieldEnumeration}
     */
    LookmlModelExploreFieldEnumeration: LookmlModelExploreFieldEnumeration,
    /**
     * The LookmlModelExploreFieldMapLayer model constructor.
     * @property {module:model/LookmlModelExploreFieldMapLayer}
     */
    LookmlModelExploreFieldMapLayer: LookmlModelExploreFieldMapLayer,
    /**
     * The LookmlModelExploreFieldSqlCase model constructor.
     * @property {module:model/LookmlModelExploreFieldSqlCase}
     */
    LookmlModelExploreFieldSqlCase: LookmlModelExploreFieldSqlCase,
    /**
     * The LookmlModelExploreFieldTimeInterval model constructor.
     * @property {module:model/LookmlModelExploreFieldTimeInterval}
     */
    LookmlModelExploreFieldTimeInterval: LookmlModelExploreFieldTimeInterval,
    /**
     * The LookmlModelExploreFieldset model constructor.
     * @property {module:model/LookmlModelExploreFieldset}
     */
    LookmlModelExploreFieldset: LookmlModelExploreFieldset,
    /**
     * The LookmlModelExploreJoins model constructor.
     * @property {module:model/LookmlModelExploreJoins}
     */
    LookmlModelExploreJoins: LookmlModelExploreJoins,
    /**
     * The LookmlModelExploreSet model constructor.
     * @property {module:model/LookmlModelExploreSet}
     */
    LookmlModelExploreSet: LookmlModelExploreSet,
    /**
     * The LookmlModelExploreSupportedMeasureType model constructor.
     * @property {module:model/LookmlModelExploreSupportedMeasureType}
     */
    LookmlModelExploreSupportedMeasureType: LookmlModelExploreSupportedMeasureType,
    /**
     * The LookmlModelNavExplore model constructor.
     * @property {module:model/LookmlModelNavExplore}
     */
    LookmlModelNavExplore: LookmlModelNavExplore,
    /**
     * The Manifest model constructor.
     * @property {module:model/Manifest}
     */
    Manifest: Manifest,
    /**
     * The MergeFields model constructor.
     * @property {module:model/MergeFields}
     */
    MergeFields: MergeFields,
    /**
     * The MergeQuery model constructor.
     * @property {module:model/MergeQuery}
     */
    MergeQuery: MergeQuery,
    /**
     * The MergeQuerySourceQuery model constructor.
     * @property {module:model/MergeQuerySourceQuery}
     */
    MergeQuerySourceQuery: MergeQuerySourceQuery,
    /**
     * The ModelSet model constructor.
     * @property {module:model/ModelSet}
     */
    ModelSet: ModelSet,
    /**
     * The ModelsNotValidated model constructor.
     * @property {module:model/ModelsNotValidated}
     */
    ModelsNotValidated: ModelsNotValidated,
    /**
     * The OIDCConfig model constructor.
     * @property {module:model/OIDCConfig}
     */
    OIDCConfig: OIDCConfig,
    /**
     * The OIDCGroupRead model constructor.
     * @property {module:model/OIDCGroupRead}
     */
    OIDCGroupRead: OIDCGroupRead,
    /**
     * The OIDCGroupWrite model constructor.
     * @property {module:model/OIDCGroupWrite}
     */
    OIDCGroupWrite: OIDCGroupWrite,
    /**
     * The OIDCUserAttributeRead model constructor.
     * @property {module:model/OIDCUserAttributeRead}
     */
    OIDCUserAttributeRead: OIDCUserAttributeRead,
    /**
     * The OIDCUserAttributeWrite model constructor.
     * @property {module:model/OIDCUserAttributeWrite}
     */
    OIDCUserAttributeWrite: OIDCUserAttributeWrite,
    /**
     * The PasswordConfig model constructor.
     * @property {module:model/PasswordConfig}
     */
    PasswordConfig: PasswordConfig,
    /**
     * The Permission model constructor.
     * @property {module:model/Permission}
     */
    Permission: Permission,
    /**
     * The PermissionSet model constructor.
     * @property {module:model/PermissionSet}
     */
    PermissionSet: PermissionSet,
    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project: Project,
    /**
     * The ProjectError model constructor.
     * @property {module:model/ProjectError}
     */
    ProjectError: ProjectError,
    /**
     * The ProjectFile model constructor.
     * @property {module:model/ProjectFile}
     */
    ProjectFile: ProjectFile,
    /**
     * The ProjectValidation model constructor.
     * @property {module:model/ProjectValidation}
     */
    ProjectValidation: ProjectValidation,
    /**
     * The ProjectValidationCache model constructor.
     * @property {module:model/ProjectValidationCache}
     */
    ProjectValidationCache: ProjectValidationCache,
    /**
     * The ProjectWorkspace model constructor.
     * @property {module:model/ProjectWorkspace}
     */
    ProjectWorkspace: ProjectWorkspace,
    /**
     * The Query model constructor.
     * @property {module:model/Query}
     */
    Query: Query,
    /**
     * The QueryTask model constructor.
     * @property {module:model/QueryTask}
     */
    QueryTask: QueryTask,
    /**
     * The RenderTask model constructor.
     * @property {module:model/RenderTask}
     */
    RenderTask: RenderTask,
    /**
     * The RepositoryCredential model constructor.
     * @property {module:model/RepositoryCredential}
     */
    RepositoryCredential: RepositoryCredential,
    /**
     * The ResultMakerFilterables model constructor.
     * @property {module:model/ResultMakerFilterables}
     */
    ResultMakerFilterables: ResultMakerFilterables,
    /**
     * The ResultMakerFilterablesListen model constructor.
     * @property {module:model/ResultMakerFilterablesListen}
     */
    ResultMakerFilterablesListen: ResultMakerFilterablesListen,
    /**
     * The ResultMakerWithIdVisConfigAndDynamicFields model constructor.
     * @property {module:model/ResultMakerWithIdVisConfigAndDynamicFields}
     */
    ResultMakerWithIdVisConfigAndDynamicFields: ResultMakerWithIdVisConfigAndDynamicFields,
    /**
     * The Role model constructor.
     * @property {module:model/Role}
     */
    Role: Role,
    /**
     * The RunningQueries model constructor.
     * @property {module:model/RunningQueries}
     */
    RunningQueries: RunningQueries,
    /**
     * The SamlConfig model constructor.
     * @property {module:model/SamlConfig}
     */
    SamlConfig: SamlConfig,
    /**
     * The SamlGroupRead model constructor.
     * @property {module:model/SamlGroupRead}
     */
    SamlGroupRead: SamlGroupRead,
    /**
     * The SamlGroupWrite model constructor.
     * @property {module:model/SamlGroupWrite}
     */
    SamlGroupWrite: SamlGroupWrite,
    /**
     * The SamlMetadataParseResult model constructor.
     * @property {module:model/SamlMetadataParseResult}
     */
    SamlMetadataParseResult: SamlMetadataParseResult,
    /**
     * The SamlUserAttributeRead model constructor.
     * @property {module:model/SamlUserAttributeRead}
     */
    SamlUserAttributeRead: SamlUserAttributeRead,
    /**
     * The SamlUserAttributeWrite model constructor.
     * @property {module:model/SamlUserAttributeWrite}
     */
    SamlUserAttributeWrite: SamlUserAttributeWrite,
    /**
     * The ScheduledPlan model constructor.
     * @property {module:model/ScheduledPlan}
     */
    ScheduledPlan: ScheduledPlan,
    /**
     * The ScheduledPlanDestination model constructor.
     * @property {module:model/ScheduledPlanDestination}
     */
    ScheduledPlanDestination: ScheduledPlanDestination,
    /**
     * The Session model constructor.
     * @property {module:model/Session}
     */
    Session: Session,
    /**
     * The SessionConfig model constructor.
     * @property {module:model/SessionConfig}
     */
    SessionConfig: SessionConfig,
    /**
     * The Snippet model constructor.
     * @property {module:model/Snippet}
     */
    Snippet: Snippet,
    /**
     * The Space model constructor.
     * @property {module:model/Space}
     */
    Space: Space,
    /**
     * The SpaceBase model constructor.
     * @property {module:model/SpaceBase}
     */
    SpaceBase: SpaceBase,
    /**
     * The SqlQuery model constructor.
     * @property {module:model/SqlQuery}
     */
    SqlQuery: SqlQuery,
    /**
     * The SqlQueryCreate model constructor.
     * @property {module:model/SqlQueryCreate}
     */
    SqlQueryCreate: SqlQueryCreate,
    /**
     * The Theme model constructor.
     * @property {module:model/Theme}
     */
    Theme: Theme,
    /**
     * The ThemeSettings model constructor.
     * @property {module:model/ThemeSettings}
     */
    ThemeSettings: ThemeSettings,
    /**
     * The Timezone model constructor.
     * @property {module:model/Timezone}
     */
    Timezone: Timezone,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserAttribute model constructor.
     * @property {module:model/UserAttribute}
     */
    UserAttribute: UserAttribute,
    /**
     * The UserAttributeGroupValue model constructor.
     * @property {module:model/UserAttributeGroupValue}
     */
    UserAttributeGroupValue: UserAttributeGroupValue,
    /**
     * The UserAttributeWithValue model constructor.
     * @property {module:model/UserAttributeWithValue}
     */
    UserAttributeWithValue: UserAttributeWithValue,
    /**
     * The UserIdOnly model constructor.
     * @property {module:model/UserIdOnly}
     */
    UserIdOnly: UserIdOnly,
    /**
     * The UserPublic model constructor.
     * @property {module:model/UserPublic}
     */
    UserPublic: UserPublic,
    /**
     * The ValidationError model constructor.
     * @property {module:model/ValidationError}
     */
    ValidationError: ValidationError,
    /**
     * The ValidationErrorDetail model constructor.
     * @property {module:model/ValidationErrorDetail}
     */
    ValidationErrorDetail: ValidationErrorDetail,
    /**
     * The WhitelabelConfiguration model constructor.
     * @property {module:model/WhitelabelConfiguration}
     */
    WhitelabelConfiguration: WhitelabelConfiguration,
    /**
     * The Workspace model constructor.
     * @property {module:model/Workspace}
     */
    Workspace: Workspace,
    /**
     * The ApiAuthApi service constructor.
     * @property {module:api/ApiAuthApi}
     */
    ApiAuthApi: ApiAuthApi,
    /**
     * The AuthApi service constructor.
     * @property {module:api/AuthApi}
     */
    AuthApi: AuthApi,
    /**
     * The ColorCollectionApi service constructor.
     * @property {module:api/ColorCollectionApi}
     */
    ColorCollectionApi: ColorCollectionApi,
    /**
     * The ConfigApi service constructor.
     * @property {module:api/ConfigApi}
     */
    ConfigApi: ConfigApi,
    /**
     * The ConnectionApi service constructor.
     * @property {module:api/ConnectionApi}
     */
    ConnectionApi: ConnectionApi,
    /**
     * The ContentApi service constructor.
     * @property {module:api/ContentApi}
     */
    ContentApi: ContentApi,
    /**
     * The DashboardApi service constructor.
     * @property {module:api/DashboardApi}
     */
    DashboardApi: DashboardApi,
    /**
     * The DataActionApi service constructor.
     * @property {module:api/DataActionApi}
     */
    DataActionApi: DataActionApi,
    /**
     * The DatagroupApi service constructor.
     * @property {module:api/DatagroupApi}
     */
    DatagroupApi: DatagroupApi,
    /**
     * The FolderApi service constructor.
     * @property {module:api/FolderApi}
     */
    FolderApi: FolderApi,
    /**
     * The GroupApi service constructor.
     * @property {module:api/GroupApi}
     */
    GroupApi: GroupApi,
    /**
     * The HomepageApi service constructor.
     * @property {module:api/HomepageApi}
     */
    HomepageApi: HomepageApi,
    /**
     * The IntegrationApi service constructor.
     * @property {module:api/IntegrationApi}
     */
    IntegrationApi: IntegrationApi,
    /**
     * The LookApi service constructor.
     * @property {module:api/LookApi}
     */
    LookApi: LookApi,
    /**
     * The LookmlModelApi service constructor.
     * @property {module:api/LookmlModelApi}
     */
    LookmlModelApi: LookmlModelApi,
    /**
     * The ProjectApi service constructor.
     * @property {module:api/ProjectApi}
     */
    ProjectApi: ProjectApi,
    /**
     * The QueryApi service constructor.
     * @property {module:api/QueryApi}
     */
    QueryApi: QueryApi,
    /**
     * The RenderTaskApi service constructor.
     * @property {module:api/RenderTaskApi}
     */
    RenderTaskApi: RenderTaskApi,
    /**
     * The RoleApi service constructor.
     * @property {module:api/RoleApi}
     */
    RoleApi: RoleApi,
    /**
     * The ScheduledPlanApi service constructor.
     * @property {module:api/ScheduledPlanApi}
     */
    ScheduledPlanApi: ScheduledPlanApi,
    /**
     * The SessionApi service constructor.
     * @property {module:api/SessionApi}
     */
    SessionApi: SessionApi,
    /**
     * The SpaceApi service constructor.
     * @property {module:api/SpaceApi}
     */
    SpaceApi: SpaceApi,
    /**
     * The ThemeApi service constructor.
     * @property {module:api/ThemeApi}
     */
    ThemeApi: ThemeApi,
    /**
     * The UserApi service constructor.
     * @property {module:api/UserApi}
     */
    UserApi: UserApi,
    /**
     * The UserAttributeApi service constructor.
     * @property {module:api/UserAttributeApi}
     */
    UserAttributeApi: UserAttributeApi,
    /**
     * The WorkspaceApi service constructor.
     * @property {module:api/WorkspaceApi}
     */
    WorkspaceApi: WorkspaceApi
  };

  return exports;
}));
